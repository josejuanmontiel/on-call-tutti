name: Sample Go Action

on: 
  workflow_dispatch:
  workflow_run:
    workflows: [CI]
    types:
      - completed  
  # push:
  #   branches: [ develop ]
  #   paths:
  #     - 'monorepo/projects/algorithms/**'

jobs:
  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./monorepo
    steps:
      - uses: actions/checkout@v3
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel

      - name: Run all solutions
        id: csv_verify
        run: |
          bazel query //projects/algorithms/on-call/... | grep ":Main$" | while read line
          do
              echo $line | grep -oP 'on-call/\d{3}' | sed 's#on-call/##g' | while read alg
              do
                for testSolution in ${GITHUB_WORKSPACE}/monorepo/projects/algorithms/on-call/comparator/src/main/resources/input/*.csv; 
                do 
                  x="${testSolution##*/}"; x="${x%.*}"
                  export INPUT=$testSolution
                  export OUTPUT=${GITHUB_WORKSPACE}/monorepo/projects/algorithms/on-call/comparator/src/main/resources/output/$(echo $x)_ALG$(echo $alg).csv
                  bazel run $line
                done
              done
          done

      - uses: actions/upload-artifact@v3
        with:
          name: solutions
          path: ${{ github.workspace }}/monorepo/projects/algorithms/on-call/comparator/src/main/resources/output/*.csv
          if-no-files-found: error

      # Replace the action with a similar one
      - uses: josejuanmontiel/on-call-tutti-action@v1.0.3
        with:
          lease-duration: 2h
          role: 'user'
          path: ${{ github.workspace }}/monorepo/projects/algorithms/on-call/comparator/src/main/resources/output
      # - env:
      #     OUTPUT1: ${{needs.job1.outputs.output1}}
      #     OUTPUT2: ${{needs.job1.outputs.output2}}
      #   run: echo "$OUTPUT1 $OUTPUT2"
      - name: "Example output call between steps"
        run: |
          echo "Result of csv comparation"
          echo "${{steps.csv_verify.outputs.result}}"
    

              

